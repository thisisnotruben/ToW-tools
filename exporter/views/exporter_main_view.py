# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file './exporter/views/exporter_main_view.ui'
#
# Created by: PyQt5 UI code generator 5.14.1
#
# WARNING! All changes made in this file will be lost!


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 400)
        MainWindow.setMinimumSize(QtCore.QSize(800, 400))
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("./exporter/views/../icon.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.main_layout = QtWidgets.QHBoxLayout()
        self.main_layout.setSpacing(8)
        self.main_layout.setObjectName("main_layout")
        self.exp_dbg_layout = QtWidgets.QVBoxLayout()
        self.exp_dbg_layout.setObjectName("exp_dbg_layout")
        self.exp_dbg_header = QtWidgets.QLabel(self.centralwidget)
        self.exp_dbg_header.setScaledContents(False)
        self.exp_dbg_header.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.exp_dbg_header.setObjectName("exp_dbg_header")
        self.exp_dbg_layout.addWidget(self.exp_dbg_header)
        self.make_lid = QtWidgets.QPushButton(self.centralwidget)
        self.make_lid.setObjectName("make_lid")
        self.exp_dbg_layout.addWidget(self.make_lid)
        self.make_sprite_icons = QtWidgets.QPushButton(self.centralwidget)
        self.make_sprite_icons.setObjectName("make_sprite_icons")
        self.exp_dbg_layout.addWidget(self.make_sprite_icons)
        self.make_sprite_deaths = QtWidgets.QPushButton(self.centralwidget)
        self.make_sprite_deaths.setObjectName("make_sprite_deaths")
        self.exp_dbg_layout.addWidget(self.make_sprite_deaths)
        self.make_sym_links = QtWidgets.QPushButton(self.centralwidget)
        self.make_sym_links.setObjectName("make_sym_links")
        self.exp_dbg_layout.addWidget(self.make_sym_links)
        self.make_icon_atlas = QtWidgets.QPushButton(self.centralwidget)
        self.make_icon_atlas.setObjectName("make_icon_atlas")
        self.exp_dbg_layout.addWidget(self.make_icon_atlas)
        self.make_tilesets = QtWidgets.QPushButton(self.centralwidget)
        self.make_tilesets.setObjectName("make_tilesets")
        self.exp_dbg_layout.addWidget(self.make_tilesets)
        self.archive = QtWidgets.QPushButton(self.centralwidget)
        self.archive.setObjectName("archive")
        self.exp_dbg_layout.addWidget(self.archive)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.exp_dbg_layout.addItem(spacerItem)
        self.main_layout.addLayout(self.exp_dbg_layout)
        self.asset_layout = QtWidgets.QVBoxLayout()
        self.asset_layout.setObjectName("asset_layout")
        self.asset_header = QtWidgets.QLabel(self.centralwidget)
        self.asset_header.setAlignment(QtCore.Qt.AlignHCenter|QtCore.Qt.AlignTop)
        self.asset_header.setObjectName("asset_header")
        self.asset_layout.addWidget(self.asset_header)
        self.export_map = QtWidgets.QPushButton(self.centralwidget)
        self.export_map.setObjectName("export_map")
        self.asset_layout.addWidget(self.export_map)
        self.export_tilesets = QtWidgets.QPushButton(self.centralwidget)
        self.export_tilesets.setObjectName("export_tilesets")
        self.asset_layout.addWidget(self.export_tilesets)
        self.export_db = QtWidgets.QPushButton(self.centralwidget)
        self.export_db.setObjectName("export_db")
        self.asset_layout.addWidget(self.export_db)
        self.export_content = QtWidgets.QPushButton(self.centralwidget)
        self.export_content.setObjectName("export_content")
        self.asset_layout.addWidget(self.export_content)
        self.export_quest = QtWidgets.QPushButton(self.centralwidget)
        self.export_quest.setObjectName("export_quest")
        self.asset_layout.addWidget(self.export_quest)
        self.export_raw_audio = QtWidgets.QPushButton(self.centralwidget)
        self.export_raw_audio.setObjectName("export_raw_audio")
        self.asset_layout.addWidget(self.export_raw_audio)
        spacerItem1 = QtWidgets.QSpacerItem(20, 30, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.asset_layout.addItem(spacerItem1)
        self.debug_map = QtWidgets.QPushButton(self.centralwidget)
        self.debug_map.setObjectName("debug_map")
        self.asset_layout.addWidget(self.debug_map)
        self.main_layout.addLayout(self.asset_layout)
        self.horizontalLayout_2.addLayout(self.main_layout)
        self.terminal_output = QtWidgets.QTextEdit(self.centralwidget)
        self.terminal_output.setReadOnly(True)
        self.terminal_output.setTextInteractionFlags(QtCore.Qt.TextSelectableByKeyboard|QtCore.Qt.TextSelectableByMouse)
        self.terminal_output.setObjectName("terminal_output")
        self.horizontalLayout_2.addWidget(self.terminal_output)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuFile_2 = QtWidgets.QMenu(self.menubar)
        self.menuFile_2.setObjectName("menuFile_2")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_about = QtWidgets.QAction(MainWindow)
        self.action_about.setObjectName("action_about")
        self.action_quit = QtWidgets.QAction(MainWindow)
        self.action_quit.setObjectName("action_quit")
        self.menuFile.addAction(self.action_about)
        self.menuFile_2.addAction(self.action_quit)
        self.menubar.addAction(self.menuFile_2.menuAction())
        self.menubar.addAction(self.menuFile.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)
        MainWindow.setTabOrder(self.make_sprite_icons, self.make_sprite_deaths)
        MainWindow.setTabOrder(self.make_sprite_deaths, self.make_sym_links)
        MainWindow.setTabOrder(self.make_sym_links, self.make_icon_atlas)
        MainWindow.setTabOrder(self.make_icon_atlas, self.archive)
        MainWindow.setTabOrder(self.archive, self.export_map)
        MainWindow.setTabOrder(self.export_map, self.export_db)
        MainWindow.setTabOrder(self.export_db, self.debug_map)
        MainWindow.setTabOrder(self.debug_map, self.terminal_output)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Tides of War Tool"))
        self.exp_dbg_header.setText(_translate("MainWindow", "Asset Commands"))
        self.make_lid.setToolTip(_translate("MainWindow", "MAKE_LID"))
        self.make_lid.setText(_translate("MainWindow", "Make Sym/Icons/Deaths"))
        self.make_sprite_icons.setToolTip(_translate("MainWindow", "MAKE_SPRITE_ICONS"))
        self.make_sprite_icons.setText(_translate("MainWindow", "Make Sprite Icons"))
        self.make_sprite_deaths.setToolTip(_translate("MainWindow", "MAKE_SPRITE_DEATHS"))
        self.make_sprite_deaths.setText(_translate("MainWindow", "Make Sprite Deaths"))
        self.make_sym_links.setToolTip(_translate("MainWindow", "MAKE_SYM_LINKS"))
        self.make_sym_links.setText(_translate("MainWindow", "Make Sym-Links"))
        self.make_icon_atlas.setToolTip(_translate("MainWindow", "MAKE_ICON_ATLAS"))
        self.make_icon_atlas.setText(_translate("MainWindow", "Make Icon Atlas"))
        self.make_tilesets.setToolTip(_translate("MainWindow", "MAKE_32_DEBUG_TILESETS"))
        self.make_tilesets.setText(_translate("MainWindow", "Make Tilesets"))
        self.archive.setToolTip(_translate("MainWindow", "BACKUP"))
        self.archive.setText(_translate("MainWindow", "Archive"))
        self.asset_header.setText(_translate("MainWindow", "Export/Debug Commands"))
        self.export_map.setToolTip(_translate("MainWindow", "EXPORT_MAPS"))
        self.export_map.setText(_translate("MainWindow", "Export Maps"))
        self.export_tilesets.setToolTip(_translate("MainWindow", "EXPORT_TILESETS"))
        self.export_tilesets.setText(_translate("MainWindow", "Export Tilesets"))
        self.export_db.setToolTip(_translate("MainWindow", "EXPORT_DATABASES"))
        self.export_db.setText(_translate("MainWindow", "Export Databases"))
        self.export_content.setToolTip(_translate("MainWindow", "EXPORT_CONTENT"))
        self.export_content.setText(_translate("MainWindow", "Export Content"))
        self.export_quest.setToolTip(_translate("MainWindow", "EXPORT_QUEST"))
        self.export_quest.setText(_translate("MainWindow", "Export Quest"))
        self.export_raw_audio.setToolTip(_translate("MainWindow", "EXPORT_AUDIO"))
        self.export_raw_audio.setText(_translate("MainWindow", "Export Raw Audio"))
        self.debug_map.setToolTip(_translate("MainWindow", "DEBUG_MAP"))
        self.debug_map.setText(_translate("MainWindow", "Debug Map"))
        self.terminal_output.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'Ubuntu\'; font-size:10pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px;\"><br /></p></body></html>"))
        self.menuFile.setTitle(_translate("MainWindow", "Help"))
        self.menuFile_2.setTitle(_translate("MainWindow", "File"))
        self.action_about.setText(_translate("MainWindow", "About"))
        self.action_quit.setText(_translate("MainWindow", "Quit"))
        self.action_quit.setShortcut(_translate("MainWindow", "Ctrl+Q"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
